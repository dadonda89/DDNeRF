# Parameters to setup experiment.
experiment:
  # Unique experiment identifier
  id: blender_lego_mipnerf_32
  # Experiment logs will be stored at "logdir"/"id"
  logdir: logs/final_code/tests
  # Seed for random number generators (for repeatability).
  randomseed: 42
  # Number of training iterations.
  train_iters: 200001
  # Number of training iterations after which to validate.
  validate_every: 2000
  # Number of training iterations after which to checkpoint.
  save_every: 2000
  # Number of training iterations after which to print progress.
  print_every: 200

train_params:
  pdf_padding: True
  max_pdf_pad_iters: 300000
  gaussian_smooth_factor: 1.7
  final_smooth: 1.1
  finnish_smooth: 150000
  depth_analysis_rays: False # bool, if true analyze depth estimation
  depth_analysis_path: test_keypoints/fern.yml
  dist_reg_coeficient: 0.02
  set_automatic_dist_reg_coeficient: True # if true - set 'dist_reg_coeficient' to max(0.01, 1/number of samples)
  loss_coeficients: [1, 1]
  dp_coeficient: 0.1

# Dataset parameters.
dataset:
  # Type of the dataset (Blender vs LLFF) uses to decide with load data functions will be in use
  type: blender
  # Base directory of dataset.
  basedir: ../data/nerf_example_data/nerf_synthetic/lego
  # choose if each iteration sample ray from single image or from multiple:
  single_image_mode: True
  # Do not use NDC (normalized device coordinates). use only with forward facing scenes
  ndc_rays: False
  # Near clip plane (clip all depth values closer than this threshold).
  near: 2
  # Far clip plane (clip all depth values farther than this threshold).
  far: 6
  # combined - sampling uniform with half of the samples up to 'combined_split' depth, then log sampling
  combined_sampling_method: False
  combined_split: 2
  # Downsample factor (used to downsample input images)
  downsample_factor: 4
  # spherify poses
  spherify: False
  # define normalization (divide all poses location in the distance of the most far pose from the world origin)
  normalize_poses: False
  normalize_factor: 5
  bd_factor: False  # for ff scene set to 0.75 otherwise -> set False
  # indexes modulo for validation set
  llffhold: 8
  # at half the original resolution of 800 x 800, to save space.
  half_res: False
  # Stride (include one per "testskip" images in the dataset).
  testskip: 1

# Optimizer params.
optimizer:
  # Name of the torch.optim class used for optimization.
  type: Adam
  # Learning rate.
  lr: 1.0E-3

# Learning rate schedule.
scheduler:
  # Exponentially decay learning rate (in 1000 steps)
  lr_decay: 250
  # Rate at which to apply this decay.
  lr_decay_factor: 0.1

# NeRF parameters.
nerf:
  # Name of the torch.nn.Module class that implements the model.
  type: GeneralMipNerfModel
  coarse_hidden_size: 256
  fine_hidden_size: 256
  ray_shape: 'cone'  # 'cylinder' or 'cone'
  train:
    # Number of random rays to retain from each image.
    # These sampled rays are used for training, and the others are discarded.
    num_random_rays: 2048 # 1024 # 4096  # 32 * 32 * 4
    # Size of each chunk (rays are batched into "chunks" and passed through
    # the network)
    chunksize: 16384 #16384 #32768 #65536  # 131072  # 1024 * 32
    # Whether or not to perturb the sampled depth values.
    perturb: True
    # Number of depth samples per ray for the coarse network.
    num_coarse: 32
    # Number of depth samples per ray for the fine network.
    num_fine: 32
    # Whether to render models using a white background.
    white_background: False
    # Standard deviation of noise to be added to the radiance field when
    # performing volume rendering.
    radiance_field_noise_std: 1.
    # Sample linearly in disparity space, as opposed to in depth space.
    lindisp: False

  # Validation-specific parameters.
  validation:
    # Number of random rays to retain from each image.
    # These sampled rays are used for training, and the others are discarded.
    chunksize: 16384 #65536   # 1024 * 32
    # Whether or not to perturb the sampled depth values.
    perturb: False
    # Number of depth samples per ray for the coarse network.
    num_coarse: 32
    # Number of depth samples per ray for the fine network.
    num_fine: 32
    # Whether to render models using a white background.
    white_background: False
    # Standard deviation of noise to be added to the radiance field when
    # performing volume rendering.
    radiance_field_noise_std: 1.
    # Sample linearly in disparity space, as opposed to in depth space.
    lindisp: False
    # Parameters to setup experiment.

